!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/platform-browser"),require("@angular/http"),require("@angular/router"),require("@angular/forms"),require("ngx-bootstrap"),require("rxjs"),require("rxjs/add/operator/map")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/platform-browser","@angular/http","@angular/router","@angular/forms","ngx-bootstrap","rxjs","rxjs/add/operator/map"],t):t((e.ng=e.ng||{},e.ng["ngx-user-admin"]=e.ng["ngx-user-admin"]||{}),e.ng.core,e._angular_platformBrowser,e.vendor._angular_http,e._angular_router,e._angular_forms,e.ngxBootstrap,e.rxjs)}(this,function(e,t,n,r,s,o,i,a){"use strict";var l=function(e,t,n,r){var s,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,n,i):s(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},c=function(e,t){return function(n,r){t(n,r,e)}},u=function(){function e(e){this.http=e,this.loginUrl="/ajax/users/authentication/login",this.logoutUrl="/ajax/users/authentication/logout";var t={token:!1};this.token=t&&t.token,this._baseUrl=""}return e.prototype.isLoggedIn=function(){return Boolean(localStorage.getItem("currentUser"))},e.prototype.login=function(e){var t=this,n=JSON.stringify(e),s=new r.Headers({"Content-Type":"application/json"}),o=new r.RequestOptions({headers:s}),i=this._baseUrl+this.loginUrl;return this.http.post(i,n,o).map(function(e){var n=e.json()&&e.json().body.token;return!!n&&(t.token=n,localStorage.setItem("currentUser",JSON.stringify({token:n})),!0)}).catch(function(e){return a.Observable.throw(e.json().error||"Server error")})},e.prototype.logout=function(){this.token=null,localStorage.removeItem("currentUser")},e}();u=l([t.Injectable(),c(0,t.Inject(r.Http))],u);var d=function(e,t,n,r){var s,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,n,i):s(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},p=function(e,t){return function(n,r){t(n,r,e)}},h=function(){function e(e,t){this.http=e,this.authService=t,this.listUrl="/ajax/erdiko/users/admin/list",this.userUrl="/ajax/erdiko/users/admin/retrieve",this.updateUrl="/ajax/erdiko/users/admin/update",this.createUrl="/ajax/erdiko/users/admin/create",this.deleteUrl="/ajax/erdiko/users/admin/delete",this.changePassUrl="/ajax/erdiko/users/admin/changepass",this.userEventUrl="/ajax/erdiko/users/admin/eventlogs",this.dataStore={},this._users$=new a.BehaviorSubject(null),this._total$=new a.BehaviorSubject(null),this._events$=new a.BehaviorSubject(null),this._eventsTotal$=new a.BehaviorSubject(null),this._baseUrl="",window.location&&"localhost"==window.location.hostname&&(this._baseUrl="http://docker.local:8088")}return Object.defineProperty(e.prototype,"users$",{get:function(){return this._users$.asObservable()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"total$",{get:function(){return this._total$.asObservable()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"events$",{get:function(){return this._events$.asObservable()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"eventsTotal$",{get:function(){return this._eventsTotal$.asObservable()},enumerable:!0,configurable:!0}),e.prototype._getHeaderOptions=function(){var e=new r.Headers({"Content-Type":"application/json",Authorization:"Bearer "+this.authService.token});return new r.RequestOptions({headers:e})},e.prototype.getUsers=function(e,t,n,r){var s=this,o=this._baseUrl+this.listUrl;e&&(o+="?pagesize="+e),t&&(o+="&page="+t),n&&(o+="&sort="+n),r&&(o+="&direction="+r);var i=this._getHeaderOptions();return this.http.get(o,i).map(function(e){return e.json()}).subscribe(function(e){s.dataStore.users=[],s.dataStore.total=0,1==e.body.success&&(s.dataStore.users=e.body.users.users,s.dataStore.total=e.body.users.total),s._users$.next(s.dataStore.users),s._total$.next(s.dataStore.total)},function(e){console.error("Error retrieving users!",o,e),s._users$.next([]),s._total$.next(0)})},e.prototype.getUser=function(e){var t=this._baseUrl+this.userUrl+"?id="+e,n=this._getHeaderOptions();return this.http.get(t,n).toPromise().then(function(e){return e.json().body.user})},e.prototype.updateUser=function(e){var t=JSON.stringify(e),n=this._getHeaderOptions(),r=this._baseUrl+this.updateUrl;return this.http.post(r,t,n).toPromise().then(function(e){return e.json().body})},e.prototype.createUser=function(e){var t=JSON.stringify(e),n=this._getHeaderOptions(),r=this._baseUrl+this.createUrl;return this.http.post(r,t,n).toPromise().then(function(e){return e.json().body}).catch(this.handleError)},e.prototype.deleteUser=function(e){var t=JSON.stringify({id:e}),n=this._getHeaderOptions(),r=this._baseUrl+this.deleteUrl;return this.http.post(r,t,n).toPromise().then(function(e){return e.json().body}).catch(this.handleError)},e.prototype.changePassword=function(e,t){var n=JSON.stringify({id:e,newpass:t}),r=this._getHeaderOptions(),s=this._baseUrl+this.changePassUrl;return this.http.post(s,n,r).toPromise().then(function(e){return e.json().body}).catch(this.handleError)},e.prototype.getUsersEvents=function(e,t,n,r,s){var o=this,i=this._baseUrl+this.userEventUrl+"?";e&&(i+="user_id="+e+"&"),t&&(i+="pagesize="+t+"&"),n&&(i+="page="+n+"&"),r&&(i+="sort="+r+"&"),s&&(i+="direction="+s);var a=this._getHeaderOptions();return this.http.get(i,a).map(function(e){return e.json()}).subscribe(function(e){o.dataStore.events=[],o.dataStore.eventsTotal=0,1==e.body.success&&(o.dataStore.events=e.body.logs,o.dataStore.eventsTotal=e.body.total),o._events$.next(o.dataStore.events),o._eventsTotal$.next(o.dataStore.eventsTotal)},function(e){console.error("Error retrieving user event logs!",i,e),o._events$.next([]),o._events$.next(0)})},e.prototype.handleError=function(e){return Promise.reject(e.message||e)},e}();h=d([t.Injectable(),p(0,t.Inject(r.Http)),p(1,t.Inject(u))],h);var f=function(e,t,n,r){var s,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,n,i):s(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},g=function(e,t){return function(n,r){t(n,r,e)}};e.UserListComponent=function(){function e(e,t,n){var r=this;this.route=t,this.router=n,this.currentPage=1,this.pagesize=10,this.pages=[],this.usersService=e,this.wait=!1,this.sortCol="id",this.sortDir="desc",this.users$=this.usersService.users$.subscribe(function(e){return r.users=e}),this.total$=this.usersService.total$.subscribe(function(e){return r.total=e}),this.usersService.total$.subscribe(function(){return r._listUpdated()}),this.selectedUser=!1}return e.prototype.ngOnInit=function(){this._getUsers()},e.prototype.ngOnDestroy=function(){this.users$.unsubscribe(),this.total$.unsubscribe()},e.prototype._getUsers=function(){this.wait=!0,this.usersService.getUsers(this.pagesize,this.currentPage,this.sortCol,this.sortDir)},e.prototype._listUpdated=function(){this.wait=!1,this._setPagination()},e.prototype.getPageCount=function(){return Math.ceil(this.total/this.pagesize)},e.prototype._setPagination=function(){this.pages=[];for(var e=1;e<=this.getPageCount();e++)this.pages.push(e)},e.prototype.clickPage=function(e){this.currentPage=e,this._getUsers()},e.prototype.clickNext=function(){this.currentPage++,this._getUsers()},e.prototype.clickPrev=function(){this.currentPage--,this._getUsers()},e.prototype.sort=function(e){this.sortCol==e?this.sortDir="desc"==this.sortDir?"asc":"desc":this.sortDir="asc",this.sortCol=e,this._getUsers()},e.prototype.clickDelete=function(e){this.selectedUser=e,this.confirmDeleteModal.show()},e.prototype.cancelDelete=function(){this.confirmDeleteModal.hide()},e.prototype.confirmDelete=function(e){var t=this;this.confirmDeleteModal.hide(),this.wait=!0,this.usersService.deleteUser(this.selectedUser).then(function(e){return t._handleResponse(e)}).catch(function(e){return t.error=e})},e.prototype._handleResponse=function(e){this._getUsers(),this.wait=!1,0==e.success&&(this.error=e.error_message)},e}(),f([t.ViewChild("confirmDeleteModal")],e.UserListComponent.prototype,"confirmDeleteModal",void 0),e.UserListComponent=f([t.Component({selector:"erdiko-user-list",template:'\n<div class="row">\n    <div class="col-xs-4">\n        <button class="btn btn-info btn-sm" routerLink="/user/">Create a New User</button>\n    </div>\n</div>\n<div class="row">\n    <div class="col-xs-12">\n        <br />\n    </div>\n</div>\n<div class="row">\n    <div class="col-xs-12">\n        <table class="table table-bordered table-hover"> \n            <thead> \n                <tr> \n                    <th (click)="sort(\'id\')">\n                        ID \n                        <i *ngIf="sortCol == \'id\'" class="fa" [ngClass]="{\'fa-sort-asc\': (sortDir == \'asc\'), \'fa-sort-desc\': (sortDir == \'desc\')}" aria-hidden="true"></i>\n                    </th> \n                    <th (click)="sort(\'name\')">\n                        User Name\n                        <i *ngIf="sortCol == \'name\'" class="fa" [ngClass]="{\'fa-sort-asc\': (sortDir == \'asc\'), \'fa-sort-desc\': (sortDir == \'desc\')}" aria-hidden="true"></i>\n                    </th> \n                    <th>\n                        Role\n                    </th> \n                    <th>\n                        Last Login\n                    </th> \n                    <th>\n                        Joined\n                    </th> \n                    <th>Edit</th> \n                    <th>Delete</th> \n                </tr> \n            </thead> \n\n            <tbody *ngIf="wait"> \n                <tr>\n                    <td colspan="7" align="center">\n                        <i class="fa fa-refresh fa-spin fa-2x fa-fw"></i> \n                    </td>\n                </tr>\n            </tbody> \n\n            <tbody *ngIf="!wait && error"> \n                <tr>\n                    <td colspan="7" align="center">\n                        <alert type="warning">{{ error }}</alert>\n                    </td>\n                </tr>\n            </tbody> \n\n            <tbody *ngIf="!wait && !error && users && users.length < 1"> \n                <tr>\n                    <td colspan="7" align="center">\n                        <alert type="warning">Sorry, no users were found. Please try again.</alert>\n                    </td>\n                </tr>\n            </tbody> \n\n            <tbody *ngIf="!wait && !error && users && users.length > 0"> \n                <tr class="user_row" *ngFor="let user of users; let index = index"> \n                    <th class="user_id" scope="row">{{ user.id }}</th> \n                    <td class="user_name">{{ user.name }}</td> \n                    <td class="user_role_name">{{ user.role.name }}</td> \n                    <td class="user_last_login">{{ user.last_login }}</td> \n                    <td class="user_joined">{{ user.joined }}</td> \n                    <td class="user_edit"><a routerLink="/user/{{ user.id }}">Edit</a></td>\n                    <td class="user_delete"><button type="button" class="btn btn-danger" (click)="clickDelete(user.id)">Delete</button></td> \n                </tr> \n            </tbody> \n        </table>\n    </div>\n</div>\n<div class="row paging" *ngIf="total">\n    <div class="col-xs-4">\n\n        <nav aria-label="Page navigation">\n          <ul class="pagination pagination-sm">\n\n            <li *ngIf="(currentPage > 1)">\n              <a (click)="clickPrev()" aria-label="Previous">\n                <span aria-hidden="true">&laquo;</span>\n              </a>\n            </li>\n\n            <li \n                *ngFor="let page of pages; let index = index"\n                 [ngClass]="{\'active\': (page == currentPage)}"\n                 [attr.id]="\'page\'+(index + 1)"\n                >\n                <a (click)="clickPage(page)">{{ page }}</a>\n            </li>\n\n            <li *ngIf="(currentPage < getPageCount())">\n              <a (click)="clickNext()" aria-label="Next">\n                <span aria-hidden="true">&raquo;</span>\n              </a>\n            </li>\n\n          </ul>\n        </nav>\n\n    </div>\n</div>\n\n<div bsModal #confirmDeleteModal="bs-modal" class="modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">\n  <div class="modal-dialog modal-sm">\n    <div class="modal-content">\n      <div class="modal-header">\n        <h4 class="modal-title pull-left">Delete?</h4>\n        <button type="button" class="close pull-right" aria-label="Close" (click)="cancelDelete()">\n          <span aria-hidden="true">&times;</span>\n        </button>\n      </div>\n      <div class="modal-body">\n        <div class="row">\n            <div class="col-xs-12">\n                <p>Are you sure you want to delete this user?</p>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xs-6">\n                <button type="button" class="btn btn-warning" (click)="cancelDelete()">Cancel</button>\n            </div>\n            <div class="col-xs-6">\n                <button type="button" class="btn btn-danger" (click)="confirmDelete(selectedUser)">Confirm</button>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  '}),g(0,t.Inject(h))],e.UserListComponent);var v=function(e,t,n,r){var s,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,n,i):s(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},b=function(e,t){return function(n,r){t(n,r,e)}};e.UserEventLogComponent=function(){function e(e){var t=this;this.usersService=e,this.userID=null,this.pageSize=10,this.currentPage=1,this.sortCol="id",this.sortDir="desc",this.pages=[],this.events$=this.usersService.events$.subscribe(function(e){return t.events=e}),this.usersService.events$.subscribe(function(){return t.wait=!1}),this.eventsTotal$=this.usersService.eventsTotal$.subscribe(function(e){return t.eventsTotal=e}),this.usersService.eventsTotal$.subscribe(function(){return t._setPages()})}return e.prototype.sort=function(e){this.sortCol!=e&&(this.sortCol=e),this.sortDir="desc"===this.sortDir?"asc":"desc",this._getEvents()},e.prototype._getEvents=function(){this.wait=!0,this.usersService.getUsersEvents(this.userID,this.pageSize,this.currentPage,this.sortCol,this.sortDir)},e.prototype._setPages=function(){this.pages=[];for(var e=1;e<=this.getPageCount();e++)this.pages.push(e)},e.prototype.clickPage=function(e){this.currentPage=e,this._getEvents()},e.prototype.clickPrev=function(){this.currentPage>1&&this.currentPage--,this._getEvents()},e.prototype.clickNext=function(){this.currentPage<this.getPageCount()&&this.currentPage++,this._getEvents()},e.prototype.getPageCount=function(){return Math.ceil(this.eventsTotal/this.pageSize)},e.prototype.ngOnInit=function(){this.userID=this.inputUserId,this._getEvents()},e.prototype.ngOnDestroy=function(){this.events$.unsubscribe(),this.eventsTotal$.unsubscribe()},e}(),v([t.Input()],e.UserEventLogComponent.prototype,"inputUserId",void 0),e.UserEventLogComponent=v([t.Component({selector:"erdiko-user-event-log",template:'\n<div class="row">\n    <div class="col-xs-12">\n        <div class="panel panel-default">\n            <div class="panel-heading">\n                <span>User Event Log</span>\n            </div>\n            <div class="panel-body">\n\n                <table class="table table-bordered table-hover">\n                    <thead>\n\n                        <tr>\n                            <th (click)="sort(\'id\')">\n                                ID\n                                <i class="fa" [ngClass]="{\'fa-sort-asc\': (sortDir == \'asc\'), \'fa-sort-desc\': (sortDir == \'desc\')}" aria-hidden="true"></i>\n                            </th>\n                            <th>\n                                Event Log\n                            </th>\n                            <th>\n                                Event Data\n                            </th>\n                            <th (click)="sort(\'created_at\')">\n                                Created At\n                                <i class="fa" [ngClass]="{\'fa-sort-asc\': (sortDir == \'asc\'), \'fa-sort-desc\': (sortDir == \'desc\')}" aria-hidden="true"></i>\n                            </th>\n                        </tr>\n                    </thead>\n\n                    <tbody *ngIf="wait"> \n                        <tr>\n                            <td colspan="7" align="center">\n                                <i class="fa fa-refresh fa-spin fa-2x fa-fw"></i> \n                            </td>\n                        </tr>\n                    </tbody>\n\n                    <tbody *ngIf="!wait && events.length <= 0">\n                        <tr>\n                            <td colspan="7" align="center">\n                                <alert type="warning">Sorry, no user events were found.</alert>\n                            </td>\n                        </tr>\n                    </tbody>\n\n                    <tbody *ngIf="!wait && events.length > 0">\n                        <tr class="user-events" *ngFor="let event of events">\n                            <td> {{event.id}} </td>\n                            <td> {{event.event}} </td>\n                            <td> {{event.event_data|json}} </td>\n                            <td> {{event.created_at}} </td>\n                        </tr>\n                    </tbody>\n\n                </table>\n            </div>\n        </div>\n\n        <div class="row paging" *ngIf="eventsTotal">\n            <div class="col-xs-4">\n\n                <nav aria-label="Page navigation">\n                <ul class="pagination pagination-sm">\n\n                    <li *ngIf="(currentPage > 1)">\n                    <a (click)="clickPrev()" aria-label="Previous">\n                        <span aria-hidden="true">&laquo;</span>\n                    </a>\n                    </li>\n\n                    <li \n                        *ngFor="let page of pages"\n                        [ngClass]="{\'active\': (page == currentPage)}"\n                        >\n                        <a (click)="clickPage(page)">{{ page }}</a>\n                    </li>\n\n                    <li *ngIf="(currentPage < getPageCount())">\n                    <a (click)="clickNext()" aria-label="Next">\n                        <span aria-hidden="true">&raquo;</span>\n                    </a>\n                    </li>\n\n                </ul>\n                </nav>\n\n            </div>\n        </div>\n    </div>\n</div>\n  ',providers:[h]}),b(0,t.Inject(h))],e.UserEventLogComponent);var m=function(e,t,n,r){var s,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,n,i):s(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},y=function(e,t){return function(n,r){t(n,r,e)}};e.UsersEventLogComponent=function(){function e(e){var t=this;this.usersService=e,this.userID=null,this.pageSize=10,this.currentPage=1,this.sortCol="id",this.sortDir="desc",this.pages=[],this.events$=this.usersService.events$.subscribe(function(e){return t.events=e}),this.usersService.events$.subscribe(function(){return t.wait=!1}),this.eventsTotal$=this.usersService.eventsTotal$.subscribe(function(e){return t.eventsTotal=e}),this.usersService.eventsTotal$.subscribe(function(){return t._setPages()})}return e.prototype.sort=function(e){this.sortCol!=e&&(this.sortCol=e),this.sortDir="desc"===this.sortDir?"asc":"desc",this._getEvents()},e.prototype._getEvents=function(){this.wait=!0,this.usersService.getUsersEvents(this.userID,this.pageSize,this.currentPage,this.sortCol,this.sortDir)},e.prototype._setPages=function(){this.pages=[];for(var e=1;e<=this.getPageCount();e++)this.pages.push(e)},e.prototype.clickPage=function(e){this.currentPage=e,this._getEvents()},e.prototype.clickPrev=function(){this.currentPage>1&&this.currentPage--,this._getEvents()},e.prototype.clickNext=function(){this.currentPage<this.getPageCount()&&this.currentPage++,this._getEvents()},e.prototype.getPageCount=function(){return Math.ceil(this.eventsTotal/this.pageSize)},e.prototype.ngOnInit=function(){this._getEvents()},e.prototype.ngOnDestroy=function(){this.events$.unsubscribe(),this.eventsTotal$.unsubscribe()},e}(),e.UsersEventLogComponent=m([t.Component({selector:"erdiko-users-event-log",template:'\n<div class="row">\n    <div class="col-xs-12">\n        <br />\n    </div>\n</div>\n<div class="row">\n    <div class="col-xs-12">\n        <table class="table table-bordered table-hover"> \n            <thead>\n                <tr>\n                    <th (click)="sort(\'id\')">\n                        ID\n                        <i class="fa" [ngClass]="{\'fa-sort-asc\': (sortDir == \'asc\'), \'fa-sort-desc\': (sortDir == \'desc\')}" aria-hidden="true"></i>\n                    </th>\n                    <th (click)="sort(\'user_id\')">\n                        User ID\n                        <i class="fa" [ngClass]="{\'fa-sort-asc\': (sortDir == \'asc\'), \'fa-sort-desc\': (sortDir == \'desc\')}" aria-hidden="true"></i>\n                    </th>\n                    <th>\n                        Event Log\n                    </th>\n                    <th>\n                        Event Data\n                    </th>\n                    <th (click)="sort(\'created_at\')">\n                        Created At\n                        <i class="fa" [ngClass]="{\'fa-sort-asc\': (sortDir == \'asc\'), \'fa-sort-desc\': (sortDir == \'desc\')}" aria-hidden="true"></i>\n                    </th>\n                </tr>\n            </thead>\n\n            <tbody *ngIf="wait"> \n                <tr>\n                    <td colspan="7" align="center">\n                        <i class="fa fa-refresh fa-spin fa-2x fa-fw"></i> \n                    </td>\n                </tr>\n            </tbody>\n\n            <tbody *ngIf="!wait && events.length <= 0">\n                <tr>\n                    <td colspan="7" align="center">\n                        <alert type="warning">Sorry, no user events were found.</alert>\n                    </td>\n                </tr>\n            </tbody>\n\n            <tbody *ngIf="!wait && events.length > 0">\n                <tr class="users-events" *ngFor="let event of events">\n                    <td> {{event.id}} </td>\n                    <td> {{event.user_id}} </td>\n                    <td> {{event.event}} </td>\n                    <td> {{event.event_data|json}} </td>\n                    <td> {{event.created_at}} </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<div class="row paging" *ngIf="eventsTotal">\n    <div class="col-xs-4">\n\n        <nav aria-label="Page navigation">\n          <ul class="pagination pagination-sm">\n\n            <li *ngIf="(currentPage > 1)">\n              <a (click)="clickPrev()" aria-label="Previous">\n                <span aria-hidden="true">&laquo;</span>\n              </a>\n            </li>\n\n            <li \n                *ngFor="let page of pages"\n                 [ngClass]="{\'active\': (page == currentPage)}"\n                >\n                <a (click)="clickPage(page)">{{ page }}</a>\n            </li>\n\n            <li *ngIf="(currentPage < getPageCount())">\n              <a (click)="clickNext()" aria-label="Next">\n                <span aria-hidden="true">&raquo;</span>\n              </a>\n            </li>\n\n          </ul>\n        </nav>\n\n    </div>\n</div>\n  ',providers:[h]}),y(0,t.Inject(h))],e.UsersEventLogComponent);var w=function(e,t,n,r){var s,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,n,i):s(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},_=function(){function e(){}return e.prototype.ngOnInit=function(){},e}();w([t.Input()],_.prototype,"passwordForm",void 0),_=w([t.Component({selector:"erdiko-password",template:'\n<form \n        id="user-password-change" \n        class="form-horizontal"\n        novalidate \n        (ngSubmit)="onSubmitChangepass(passwordForm)" \n        [formGroup]="passwordForm"\n    >\n\n    <div class="form-group">\n        <p class="col-xs-12">Passwords must contain at least 1 alpha & 1 numeric character, with a minimum length of 5 characters</p>\n        <label for="password" class="col-xs-2 control-label">New Password</label>\n        <div class="col-xs-10">\n            <input  type="password" \n                    class="form-control" \n                    name="password" \n                    formControlName="password"\n                    required>\n            <div class="text-danger" *ngIf="passwordForm.get(\'password\').hasError(\'required\') && passwordForm.get(\'password\').touched">\n            Password is required\n            </div>\n        </div>\n    </div>\n    <div class="form-group" [formGroup] = "passwordForm">\n        <label for="password" class="col-xs-2 control-label">Confirm Password</label>\n        <div class="col-xs-10">\n\n            <input  type="password" \n                    class="form-control" \n                    name="confirm" \n                    formControlName="confirm"\n                    required>\n\n            <div class="text-danger" *ngIf="passwordForm.get(\'confirm\').hasError(\'required\') && passwordForm.get(\'confirm\').touched">\n            Password Confirm is required\n            </div>\n        </div>\n    </div>\n</form>\n  '})],_);var P=function(){function e(){}return e}(),x=function(e,t,n,r){var s,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,n,i):s(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},U=function(e,t){return function(n,r){t(n,r,e)}};e.UserEditComponent=function(){function e(e,t,n){this.wait=!1,this.passWait=!1,this.usersService=e,this.route=t,this.router=n,this.fb=new o.FormBuilder,this.user=new P}return e.prototype.ngOnInit=function(){var e=this;this.route.data.forEach(function(t){void 0!==t.user&&t.user&&(e.user=t.user)}),this._initForms()},e.prototype._initForms=function(){this.passwordForm=this.fb.group({password:["",[o.Validators.required,o.Validators.minLength(3)]],confirm:["",o.Validators.required]}),this.userForm=this.fb.group({name:["",[o.Validators.required,o.Validators.minLength(3)]],email:["",o.Validators.required],role:["",o.Validators.required]}),this.user.id&&(this.userForm.controls.name.setValue(this.user.name),this.userForm.controls.email.setValue(this.user.email),this.userForm.controls.role.setValue(this.user.role.id))},e.prototype.onSubmit=function(e){var t=this,n=e.value,r=e.valid;if(this.wait=!0,this.msg=this.error="",r){if(this.user.id)return n.id=this.user.id,this.usersService.updateUser(n).then(function(e){return t._handleResponse(e)}).catch(function(e){return t.error=e});var s={email:n.email,name:n.name,role:n.role,password:this.passwordForm.controls.password.value};return this.usersService.createUser(s).then(function(e){return t._handleResponse(e)}).catch(function(e){return t.error=e})}},e.prototype._handleResponse=function(e){this.wait=!1,1==e.success?"create"===e.method&&this.router.navigate(["/user/"+e.user.id]):this._handleError(e.error_message)},e.prototype.onSubmitChangepass=function(e){var t=this,n=e.value,r=e.valid;if(this.passWait=!0,this.passMsg=this.passError="",r)return this.usersService.changePassword(this.user.id,n.passwordInput.password).then(function(e){return t._handlePasswordResponse(e)}).catch(function(e){return t.passError=e})},e.prototype._handlePasswordResponse=function(e){this.passWait=!1,this.passwordForm.reset(),1==e.success?this.messageService.sendMessage("edit-password","success"):this.passError=e.error_message},e.prototype._handleError=function(e){this.error=e},e.prototype.createEditHeader=function(){return this.user.id?"Edit User":"Create User"},e}(),x([t.ViewChild(_)],e.UserEditComponent.prototype,"passwordComponent",void 0),e.UserEditComponent=x([t.Component({selector:"erdiko-user-edit",
template:'\n<div class="row">\n    <div class="col-xs-12">\n        <button class="btn btn-info btn-sm" routerLink="/list/">\n            <i class="fa fa-chevron-left" aria-hidden="true"></i> Back to User List\n        </button>\n    </div>\n</div>\n<div class="row">\n    <div class="col-xs-12">\n        <br/>\n    </div>\n</div>\n<div class="row">\n    <div class="col-xs-12">\n        <div id="id-title" *ngIf="user.id">\n            User {{ user.id }}\n        </div>\n        <div class="panel panel-default" id="edit-update">\n            <tabset>\n                <tab [heading]="createEditHeader()">\n                    <div class="panel-body">\n                        <alert *ngIf="msg" type="success">{{ msg }}</alert>\n                        <alert *ngIf="error" type="danger">{{ error }}</alert>\n\n                            <form \n                                    id="user-edit" \n                                    class="form-horizontal"\n                                    novalidate \n                                    (ngSubmit)="onSubmit(userForm)" \n                                    [formGroup]="userForm"\n                                >\n\n                                <div class="form-group" *ngIf="user && user.id">\n                                    <label for="name" class="col-xs-2 control-label">ID</label>\n                                    <div class="col-xs-10">\n                                        <p>{{ user.id }}</p>\n                                    </div>\n                                </div>\n                                <div class="form-group" *ngIf="user && user.created_at">\n                                    <label for="name" class="col-xs-2 control-label">Joined</label>\n                                    <div class="col-xs-10">\n                                        <p *ngIf="!user.created_at">n/a</p>\n                                        <p>{{ user.created_at }}</p>\n                                    </div>\n                                </div>\n                                <div class="form-group" *ngIf="user.id">\n                                    <label for="name" class="col-xs-2 control-label">Last Login</label>\n                                    <div class="col-xs-10">\n                                        <p *ngIf="!user.last_login">n/a</p>\n                                        <p>{{ user.last_login }}</p>\n                                    </div>\n                                </div>\n                                <div class="form-group">\n                                    <label for="name" class="col-xs-2 control-label">Name</label>\n                                    <div class="col-xs-10">\n                                        <input type="text" class="form-control" name="name" formControlName="name" placeholder="Name">\n                                        <div class="text-danger" *ngIf="userForm.get(\'name\').hasError(\'required\') && userForm.get(\'name\').touched">\n                                        Name is required\n                                        </div>\n                                        <div class="text-danger" *ngIf="userForm.get(\'name\').hasError(\'minlength\') && userForm.get(\'name\').touched">\n                                        Minimum of 2 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="form-group">\n                                    <label for="email" class="col-xs-2 control-label">Email</label>\n                                    <div class="col-xs-10">\n                                        <input type="email" class="form-control" name="email" \n                                                formControlName="email" placeholder="Email">\n                                        <div class="text-danger" *ngIf="userForm.get(\'email\').hasError(\'required\') && userForm.get(\'email\').touched">\n                                        Email is required\n                                        </div>\n                                        <div class="text-danger" *ngIf="userForm.get(\'email\').hasError(\'pattern\') && userForm.get(\'email\').touched">\n                                        A Valid email is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="form-group">\n                                    <label for="role" class="col-xs-2 control-label">Role</label>\n                                    <div class="col-xs-10" id="select-role">\n                                            <select class="form-control" name="role" formControlName="role">\n                                                <option value="2">Admin</option>\n                                                <option value="1">User</option>\n                                            </select>\n                                        <div class="text-danger" *ngIf="userForm.get(\'role\').hasError(\'required\') && userForm.get(\'role\').touched">\n                                        Role is required\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </form>\n\n                            \x3c!--show password input if creating user--\x3e\n                            <erdiko-password *ngIf="!user.id" [passwordForm]="passwordForm"></erdiko-password>\n\n                            <div class="form-group">\n                                <div class="col-xs-offset-2 col-xs-4">\n                                    <button type="cancel" class="btn btn-warning" routerLink="/list/">Cancel</button>\n                                </div>\n                                <div class="col-xs-offset-2 col-xs-4">\n                                    <button type="submit" class="btn btn-success" (click)="onSubmit(userForm)" [disabled]="!userForm.valid || wait || (!user.id && !passwordForm.valid)">\n                                        Save\n                                        <i *ngIf="wait" class="fa fa-refresh fa-spin fa-fw"></i> \n                                    </button>\n                                </div>\n                            </div>\n                    </div>\n                </tab>\n\n                <tab heading="Update Password" *ngIf="user.id">\n\n                    <div class="panel-body">\n\n                        <alert *ngIf="passMsg" type="success">{{ passMsg }}</alert>\n                        <alert *ngIf="passError" type="danger">{{ passError }}</alert>\n\n                        <erdiko-password [passwordForm]="passwordForm"></erdiko-password>\n\n                        <div class="form-group">\n                            <div class="col-xs-offset-2 col-xs-4">\n                                <button type="cancel" class="btn btn-warning" routerLink="/list/">Cancel</button>\n                            </div>\n                            <div class="col-xs-offset-2 col-xs-4">\n                                <button type="submit" class="btn btn-success" (click)="onSubmitChangepass(passwordForm)" [disabled]="!passwordForm.valid || passWait">\n                                    Save\n                                    <i *ngIf="passWait" class="fa fa-refresh fa-spin fa-fw"></i> \n                                </button>\n                            </div>\n                        </div>\n\n                    </div>\n                </tab>\n            </tabset>\n        </div>\n    </div>\n</div>\n\n<div class="row">\n    <div class="col-xs-12">\n        <br/>\n    </div>\n</div>\n'}),U(0,t.Inject(h)),U(1,t.Inject(s.ActivatedRoute)),U(2,t.Inject(s.Router))],e.UserEditComponent);var C=function(e,t,n,r){var s,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,n,i):s(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},I=[];e.UserAdminModule=j=function(){function e(){}return e.forRoot=function(){return{ngModule:j,providers:[u,h]}},e}(),e.UserAdminModule=j=C([t.NgModule({imports:[n.BrowserModule,r.HttpModule,s.RouterModule.forRoot(I),o.FormsModule,o.ReactiveFormsModule,i.AlertModule,i.ModalModule,i.TabsModule],declarations:[e.UserListComponent,e.UserEventLogComponent,e.UsersEventLogComponent,e.UserEditComponent,_],exports:[e.UserListComponent,e.UserEventLogComponent,e.UsersEventLogComponent]})],e.UserAdminModule);var j;Object.defineProperty(e,"__esModule",{value:!0})});